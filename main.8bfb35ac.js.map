{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","text","nodeName","id","addEventListener","printMessage","message","div","document","createElement","className","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAUjB,OAAA,IAAIC,QATM,SAACC,EAASC,GACnBC,IAAAA,EAAiBJ,UAAAA,OAAAA,EACrBD,2BAAAA,OAAAA,EAAQM,SAAiBN,UAAAA,OAAAA,EAAQO,GADnC,KAGAP,EAAQQ,iBAAiBP,EAAW,WAClCE,EAAQE,OAOd,IAAMI,EAAe,SAACC,GACdC,IAAAA,EAAMC,SAASC,cAAc,OAEnCF,EAAIG,UAAY,UAChBH,EAAII,YAAcL,EAElBE,SAASI,KAAKC,OAAON,IAGvBO,OAAOC,QAAU,CACfpB,QAAAA,EACAU,aAAAA","file":"main.8bfb35ac.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  const resolver = (resolve, reject) => {\n    const text = `It was ${eventName} on the element: \n    ${element.nodeName}, id: ${element.id}.`;\n\n    element.addEventListener(eventName, () => {\n      resolve(text);\n    });\n  };\n\n  return new Promise(resolver);\n}\n\nconst printMessage = (message) => {\n  const div = document.createElement('div');\n\n  div.className = 'message';\n  div.textContent = message;\n\n  document.body.append(div);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}